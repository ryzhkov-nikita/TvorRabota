  zk.cpp
C:\Users\TrueDetective\Desktop\labs\Project2\zk.cpp(216,82): warning C4244: аргумент: преобразование "int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
C:\Users\TrueDetective\Desktop\labs\Project2\zk.cpp(216,63): warning C4244: аргумент: преобразование "int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
C:\Users\TrueDetective\Desktop\labs\Project2\zk.cpp(271,110): warning C4244: аргумент: преобразование "int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
C:\Users\TrueDetective\Desktop\labs\Project2\zk.cpp(271,89): warning C4244: аргумент: преобразование "int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
C:\Users\TrueDetective\Desktop\labs\Project2\zk.cpp(272,108): warning C4244: аргумент: преобразование "int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
C:\Users\TrueDetective\Desktop\labs\Project2\zk.cpp(272,87): warning C4244: аргумент: преобразование "int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::String::String(char const *,class std::locale const &)" (__imp_??0String@sf@@QEAA@PEBDAEBVlocale@std@@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::String::String(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::locale const &)" (__imp_??0String@sf@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVlocale@3@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::String::~String(void)" (__imp_??1String@sf@@QEAA@XZ) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: static bool __cdecl sf::Mouse::isButtonPressed(enum sf::Mouse::Button)" (__imp_?isButtonPressed@Mouse@sf@@SA_NW4Button@12@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: static class sf::Vector2<int> __cdecl sf::Mouse::getPosition(class sf::Window const &)" (__imp_?getPosition@Mouse@sf@@SA?AV?$Vector2@H@2@AEBVWindow@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::VideoMode::VideoMode(unsigned int,unsigned int,unsigned int)" (__imp_??0VideoMode@sf@@QEAA@III@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Window::close(void)" (__imp_?close@Window@sf@@QEAAXXZ) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: bool __cdecl sf::Window::isOpen(void)const " (__imp_?isOpen@Window@sf@@QEBA_NXZ) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: bool __cdecl sf::Window::pollEvent(class sf::Event &)" (__imp_?pollEvent@Window@sf@@QEAA_NAEAVEvent@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Window::setFramerateLimit(unsigned int)" (__imp_?setFramerateLimit@Window@sf@@QEAAXI@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Window::display(void)" (__imp_?display@Window@sf@@QEAAXXZ) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Transformable::setPosition(class sf::Vector2<float> const &)" (__imp_?setPosition@Transformable@sf@@QEAAXAEBV?$Vector2@M@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: class sf::Vector2<float> const & __cdecl sf::Transformable::getPosition(void)const " (__imp_?getPosition@Transformable@sf@@QEBAAEBV?$Vector2@M@2@XZ) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Color::Color(unsigned char,unsigned char,unsigned char,unsigned char)" (__imp_??0Color@sf@@QEAA@EEEE@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Vertex::Vertex(class sf::Vector2<float> const &,class sf::Color const &)" (__imp_??0Vertex@sf@@QEAA@AEBV?$Vector2@M@1@AEBVColor@1@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Shape::setFillColor(class sf::Color const &)" (__imp_?setFillColor@Shape@sf@@QEAAXAEBVColor@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Shape::setOutlineColor(class sf::Color const &)" (__imp_?setOutlineColor@Shape@sf@@QEAAXAEBVColor@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Shape::setOutlineThickness(float)" (__imp_?setOutlineThickness@Shape@sf@@QEAAXM@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: class sf::Rect<float> __cdecl sf::Shape::getGlobalBounds(void)const " (__imp_?getGlobalBounds@Shape@sf@@QEBA?AV?$Rect@M@2@XZ) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::CircleShape::CircleShape(float,unsigned __int64)" (__imp_??0CircleShape@sf@@QEAA@M_K@Z) в функции "public: static void __cdecl std::_Default_allocator_traits<class std::allocator<class sf::CircleShape> >::construct<class sf::CircleShape>(class std::allocator<class sf::CircleShape> &,class sf::CircleShape * const)" (??$construct@VCircleShape@sf@@$$V@?$_Default_allocator_traits@V?$allocator@VCircleShape@sf@@@std@@@std@@SAXAEAV?$allocator@VCircleShape@sf@@@1@QEAVCircleShape@sf@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::CircleShape::setRadius(float)" (__imp_?setRadius@CircleShape@sf@@QEAAXM@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: virtual __cdecl sf::CircleShape::~CircleShape(void)" (__imp_??1CircleShape@sf@@UEAA@XZ) в функции "public: virtual void * __cdecl sf::CircleShape::`scalar deleting destructor'(unsigned int)" (??_GCircleShape@sf@@UEAAPEAXI@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Font::Font(void)" (__imp_??0Font@sf@@QEAA@XZ) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Font::~Font(void)" (__imp_??1Font@sf@@QEAA@XZ) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: bool __cdecl sf::Font::loadFromFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (__imp_?loadFromFile@Font@sf@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::RenderTarget::clear(class sf::Color const &)" (__imp_?clear@RenderTarget@sf@@QEAAXAEBVColor@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::RenderTarget::draw(class sf::Drawable const &,class sf::RenderStates const &)" (__imp_?draw@RenderTarget@sf@@QEAAXAEBVDrawable@2@AEBVRenderStates@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::RenderTarget::draw(class sf::Vertex const *,unsigned __int64,enum sf::PrimitiveType,class sf::RenderStates const &)" (__imp_?draw@RenderTarget@sf@@QEAAXPEBVVertex@2@_KW4PrimitiveType@2@AEBVRenderStates@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::RenderWindow::RenderWindow(void)" (__imp_??0RenderWindow@sf@@QEAA@XZ) в функции "public: __cdecl Graph::Graph(int)" (??0Graph@@QEAA@H@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::RenderWindow::RenderWindow(class sf::VideoMode,class sf::String const &,unsigned int,struct sf::ContextSettings const &)" (__imp_??0RenderWindow@sf@@QEAA@VVideoMode@1@AEBVString@1@IAEBUContextSettings@1@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: virtual __cdecl sf::RenderWindow::~RenderWindow(void)" (__imp_??1RenderWindow@sf@@UEAA@XZ) в функции "int `public: __cdecl Graph::Graph(int)'::`1'::dtor$3" (?dtor$3@?0???0Graph@@QEAA@H@Z@4HA).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Text::Text(void)" (__imp_??0Text@sf@@QEAA@XZ) в функции "public: static void __cdecl std::_Default_allocator_traits<class std::allocator<class sf::Text> >::construct<class sf::Text>(class std::allocator<class sf::Text> &,class sf::Text * const)" (??$construct@VText@sf@@$$V@?$_Default_allocator_traits@V?$allocator@VText@sf@@@std@@@std@@SAXAEAV?$allocator@VText@sf@@@1@QEAVText@sf@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Text::setString(class sf::String const &)" (__imp_?setString@Text@sf@@QEAAXAEBVString@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Text::setFont(class sf::Font const &)" (__imp_?setFont@Text@sf@@QEAAXAEBVFont@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Text::setCharacterSize(unsigned int)" (__imp_?setCharacterSize@Text@sf@@QEAAXI@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Text::setFillColor(class sf::Color const &)" (__imp_?setFillColor@Text@sf@@QEAAXAEBVColor@2@@Z) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: virtual __cdecl sf::Text::~Text(void)" (__imp_??1Text@sf@@UEAA@XZ) в функции "public: virtual void * __cdecl sf::Text::`scalar deleting destructor'(unsigned int)" (??_GText@sf@@UEAAPEAXI@Z).
zk.obj : error LNK2001: неразрешенный внешний символ "private: virtual void __cdecl sf::Text::draw(class sf::RenderTarget &,class sf::RenderStates)const " (?draw@Text@sf@@EEBAXAEAVRenderTarget@2@VRenderStates@2@@Z).
zk.obj : error LNK2001: неразрешенный внешний символ "private: virtual void __cdecl sf::Shape::draw(class sf::RenderTarget &,class sf::RenderStates)const " (?draw@Shape@sf@@EEBAXAEAVRenderTarget@2@VRenderStates@2@@Z).
zk.obj : error LNK2001: неразрешенный внешний символ "public: virtual unsigned __int64 __cdecl sf::CircleShape::getPointCount(void)const " (?getPointCount@CircleShape@sf@@UEBA_KXZ).
zk.obj : error LNK2001: неразрешенный внешний символ "public: virtual class sf::Vector2<float> __cdecl sf::CircleShape::getPoint(unsigned __int64)const " (?getPoint@CircleShape@sf@@UEBA?AV?$Vector2@M@2@_K@Z).
zk.obj : error LNK2019: ссылка на неразрешенный внешний символ "__declspec(dllimport) public: static class sf::RenderStates const sf::RenderStates::Default" (__imp_?Default@RenderStates@sf@@2V12@B) в функции "public: void __cdecl Graph::printGraph(class std::vector<int,class std::allocator<int> > const &)" (?printGraph@Graph@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@@Z).
C:\Users\TrueDetective\Desktop\labs\Project2\x64\Debug\Project2.exe : fatal error LNK1120: неразрешенных внешних элементов: 42
